[{"C:\\Users\\Milfer\\programate\\calculadora-react\\src\\index.js":"1","C:\\Users\\Milfer\\programate\\calculadora-react\\src\\App.js":"2","C:\\Users\\Milfer\\programate\\calculadora-react\\src\\components\\calculadora.jsx":"3","C:\\Users\\Milfer\\programate\\calculadora-react\\src\\components\\Resultado.jsx":"4","C:\\Users\\Milfer\\programate\\calculadora-react\\src\\components\\Botones.jsx":"5"},{"size":230,"mtime":1612634108113,"results":"6","hashOfConfig":"7"},{"size":240,"mtime":1612640266351,"results":"8","hashOfConfig":"7"},{"size":162,"mtime":1612634256147,"results":"9","hashOfConfig":"7"},{"size":2,"mtime":1612638466467,"results":"10","hashOfConfig":"7"},{"size":3622,"mtime":1612652681458,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"f7284a",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\Milfer\\programate\\calculadora-react\\src\\index.js",[],["24","25"],"C:\\Users\\Milfer\\programate\\calculadora-react\\src\\App.js",[],"C:\\Users\\Milfer\\programate\\calculadora-react\\src\\components\\calculadora.jsx",[],"C:\\Users\\Milfer\\programate\\calculadora-react\\src\\components\\Resultado.jsx",[],"C:\\Users\\Milfer\\programate\\calculadora-react\\src\\components\\Botones.jsx",["26"],"import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nfunction Botones() {\r\n  const [resultado, setResultado] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n  useEffect(() => inputRef.current.focus());\r\n\r\n  const eventClick = (e) => {\r\n    setResultado(resultado.concat(e.target.name));\r\n    console.log(e);\r\n  };\r\n\r\n  const borrar = () => {\r\n    setResultado(resultado.slice(0, resultado.length - 1));\r\n  };\r\n\r\n  const reset = () => {\r\n    setResultado(\"\");\r\n  };\r\n\r\n  const result = () => {\r\n    try {\r\n      setResultado(eval(resultado).toString());\r\n    } catch (error) {\r\n      setResultado(\"Error\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Contenedor\">\r\n      <div className=\"Calculadora\">\r\n        <table>\r\n          <div className=\"Resultado\">\r\n            <tr>\r\n              <input type=\"text\" value={resultado} ref={inputRef} />\r\n            </tr>\r\n          </div>\r\n          <tr>\r\n            <td>\r\n              <button onClick={reset}>C</button>\r\n            </td>\r\n            <td>\r\n              <button onClick={eventClick} name=\"/\" id=\"division\">\r\n                /\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button name=\"*\" onClick={eventClick}>\r\n                *\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button onClick={borrar}>x</button>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <button onClick={eventClick} name=\"7\">\r\n                7\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button name=\"8\" onClick={eventClick}>\r\n                8\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button name=\"9\" onClick={eventClick}>\r\n                9\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button name=\"-\" onClick={eventClick}>\r\n                -\r\n              </button>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <button name=\"4\" onClick={eventClick}>\r\n                4\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button name=\"5\" onClick={eventClick}>\r\n                5\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button name=\"6\" onClick={eventClick}>\r\n                6\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button name=\"+\" onClick={eventClick}>\r\n                +\r\n              </button>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <button name=\"1\" onClick={eventClick}>\r\n                1\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button name=\"2\" onClick={eventClick}>\r\n                2\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button name=\"3\" onClick={eventClick}>\r\n                3\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button name=\"=\" onClick={result}>\r\n                =\r\n              </button>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <button name=\"%\" onClick={eventClick}>\r\n                %\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button name=\"=\" onClick={eventClick}>\r\n                0\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button name=\".\" onClick={eventClick}>\r\n                .\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Botones;\r\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":23,"column":20,"nodeType":"33","messageId":"34","endLine":23,"endColumn":24},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-eval","eval can be harmful.","CallExpression","unexpected","no-global-assign","no-unsafe-negation"]